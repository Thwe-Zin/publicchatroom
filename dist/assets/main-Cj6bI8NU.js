import{c as L,g as O,d as Y,a as A,b as T,o as E,q as H,e as $,w as F,T as N,f as z}from"./authorize-PebeZPvj.js";import{t as g,n as v,g as I,a as R,e as U,m as C,b as y}from"./en-US-DAI3C7mv.js";/* empty css                */function j(r,t){let e=r,a=t;const n=L(T,"chats");let o=null;const u=async l=>{const c=new Date,i={username:a,room:e,message:l,created_at:N.fromDate(c)};try{return await z(n,i)}catch(f){throw f}},s=l=>{o&&o(),o=E(H(n,F("room","==",e),$("created_at")),c=>{c.docChanges().forEach(i=>{i.type==="added"&&l(i.doc.data())})})},m=l=>{e=l},d=l=>{a=l,localStorage.setItem("username",a)};return(()=>{let l=setInterval(async()=>{try{const c=await O(n);if(c.empty){console.log("No message to delete"),clearInterval(l);return}c.forEach(async()=>{await Y(A(T,"chats",c.id))}),console.log("All messges deleted successfully")}catch{console.log("Error deleting message : ",err)}},15e3)})(),{addChat:u,getChats:s,updateChatroom:m,updateUsername:d}}function x(r,t){const e=+g(r)-+g(t);return e<0?-1:e>0?1:e}function k(r,t,e){const[a,n]=v(e==null?void 0:e.in,r,t),o=a.getFullYear()-n.getFullYear(),u=a.getMonth()-n.getMonth();return o*12+u}function G(r){return t=>{const a=(r?Math[r]:Math.trunc)(t);return a===0?0:a}}function B(r,t){return+g(r)-+g(t)}function J(r,t){const e=g(r,t==null?void 0:t.in);return e.setHours(23,59,59,999),e}function K(r,t){const e=g(r,t==null?void 0:t.in),a=e.getMonth();return e.setFullYear(e.getFullYear(),a+1,0),e.setHours(23,59,59,999),e}function P(r,t){const e=g(r,t==null?void 0:t.in);return+J(e,t)==+K(e,t)}function Q(r,t,e){const[a,n,o]=v(e==null?void 0:e.in,r,r,t),u=x(n,o),s=Math.abs(k(n,o));if(s<1)return 0;n.getMonth()===1&&n.getDate()>27&&n.setDate(30),n.setMonth(n.getMonth()-u*s);let m=x(n,o)===-u;P(a)&&s===1&&x(a,o)===1&&(m=!1);const d=u*(s-+m);return d===0?0:d}function V(r,t,e){const a=B(r,t)/1e3;return G(e==null?void 0:e.roundingMethod)(a)}function W(r,t,e){const a=R(),n=(e==null?void 0:e.locale)??a.locale??U,o=2520,u=x(r,t);if(isNaN(u))throw new RangeError("Invalid time value");const s=Object.assign({},e,{addSuffix:e==null?void 0:e.addSuffix,comparison:u}),[m,d]=v(e==null?void 0:e.in,...u>0?[t,r]:[r,t]),h=V(d,m),l=(I(d)-I(m))/1e3,c=Math.round((h-l)/60);let i;if(c<2)return e!=null&&e.includeSeconds?h<5?n.formatDistance("lessThanXSeconds",5,s):h<10?n.formatDistance("lessThanXSeconds",10,s):h<20?n.formatDistance("lessThanXSeconds",20,s):h<40?n.formatDistance("halfAMinute",0,s):h<60?n.formatDistance("lessThanXMinutes",1,s):n.formatDistance("xMinutes",1,s):c===0?n.formatDistance("lessThanXMinutes",1,s):n.formatDistance("xMinutes",c,s);if(c<45)return n.formatDistance("xMinutes",c,s);if(c<90)return n.formatDistance("aboutXHours",1,s);if(c<C){const f=Math.round(c/60);return n.formatDistance("aboutXHours",f,s)}else{if(c<o)return n.formatDistance("xDays",1,s);if(c<y){const f=Math.round(c/C);return n.formatDistance("xDays",f,s)}else if(c<y*2)return i=Math.round(c/y),n.formatDistance("aboutXMonths",i,s)}if(i=Q(d,m),i<12){const f=Math.round(c/y);return n.formatDistance("xMonths",f,s)}else{const f=i%12,S=Math.trunc(i/12);return f<3?n.formatDistance("aboutXYears",S,s):f<9?n.formatDistance("overXYears",S,s):n.formatDistance("almostXYears",S+1,s)}}function Z(r){return{newli:a=>{const n=W(a.created_at.toDate(),new Date,{addSuffix:!0}),o=`
                    <li class="shadow rounded-lg px-4 py-2">
                        <div class="flex justify-between">
                                <h5 class="text-gray-600 font-medium text-sm">${a.username}</h5>
                                <i class="text-gray-300 text-xs">${n}</i>
                        </div>
                        <p class="text-gray-600 text-sm">${a.message}</p>
                    </li>`;r.innerHTML+=o},resetli:()=>{r.innerHTML=""}}}const p=document.querySelector(".chatrooms"),ee=document.querySelector(".chat-ul"),w=document.querySelector(".chat-form"),D=document.querySelector(".user-form"),_=document.querySelector(".msg"),X=document.querySelector(".roomtitle"),q=localStorage.username?localStorage.username:"Guest";D.username.placeholder=`username is ${q}`;const M=j("general",q);X.textContent="General";const b=Z(ee);w.addEventListener("submit",r=>{r.preventDefault();const t=w.message.value.trim();M.addChat(t).then(()=>w.reset()).catch(e=>console.log(e))});D.addEventListener("submit",r=>{r.preventDefault();const t=D.username.value.trim();M.updateUsername(t),D.reset(),_.innerText=`New name updated to ${t}`,D.username.placeholder=`username is ${t}`,setTimeout(()=>_.innerText="",3e3)});p.addEventListener("click",r=>{r.preventDefault();const t=r.target.closest("button");if(t){b.resetli();const e=t.getAttribute("id"),a=t.querySelector("h3").innerText;X.textContent=a,M.updateChatroom(e),M.getChats(n=>{b.newli(n)})}});M.getChats(r=>{b.newli(r)});
